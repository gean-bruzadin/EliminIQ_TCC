// <auto-generated />
using EliminIQ_TCC.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EliminIQ_TCC.Migrations
{
    [DbContext(typeof(DbConfig))]
    [Migration("20250605193936_NovaBasedeDados")]
    partial class NovaBasedeDados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EliminIQ_TCC.Models.Alternativa", b =>
                {
                    b.Property<int>("Id_Alternativa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Alternativa"));

                    b.Property<string>("Descricao_Alternativa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Fk_Pergunta")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id_Alternativa");

                    b.HasIndex("Fk_Pergunta");

                    b.ToTable("Alternativa");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Criar_Quizz", b =>
                {
                    b.Property<int>("Fk_Usuario")
                        .HasColumnType("integer");

                    b.Property<int>("Fk_Quizz")
                        .HasColumnType("integer");

                    b.HasKey("Fk_Usuario", "Fk_Quizz");

                    b.ToTable("Criar_Quizz");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Dificuldade", b =>
                {
                    b.Property<int>("Id_Dificuldade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Dificuldade"));

                    b.Property<string>("Nome_Dificuldade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Dificuldade");

                    b.ToTable("Dificuldade");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Pergunta", b =>
                {
                    b.Property<int>("Id_Pergunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Pergunta"));

                    b.Property<string>("Descricao_Pergunta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Fk_Quiz")
                        .HasColumnType("integer");

                    b.HasKey("Id_Pergunta");

                    b.HasIndex("Fk_Quiz");

                    b.ToTable("Pergunta");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Privacidade", b =>
                {
                    b.Property<int>("Id_Privacidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Privacidade"));

                    b.Property<string>("Nome_Privacidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Privacidade");

                    b.ToTable("Privacidade");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Quizz", b =>
                {
                    b.Property<int>("Id_Quiz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Quiz"));

                    b.Property<string>("Dificuldade_Quiz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Fk_Dificuldade")
                        .HasColumnType("integer");

                    b.Property<int>("Fk_Privacidade")
                        .HasColumnType("integer");

                    b.Property<int>("Fk_Tipo_Quiz")
                        .HasColumnType("integer");

                    b.Property<string>("Nome_Quiz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Privacidade_Quiz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Quiz");

                    b.HasIndex("Fk_Dificuldade");

                    b.HasIndex("Fk_Privacidade");

                    b.HasIndex("Fk_Tipo_Quiz");

                    b.ToTable("Quizz");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.TipoQuizz", b =>
                {
                    b.Property<int>("Id_Tipo_Quiz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Tipo_Quiz"));

                    b.Property<string>("Tema_Quiz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Tipo_Quiz");

                    b.ToTable("TipoQuizz");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Usuario"));

                    b.Property<string>("Email_Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome_Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha_Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Usuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Usuario_Quizz", b =>
                {
                    b.Property<int>("Fk_Usuario")
                        .HasColumnType("integer");

                    b.Property<int>("Fk_Quizz")
                        .HasColumnType("integer");

                    b.Property<int?>("QuizzId_Quiz")
                        .HasColumnType("integer");

                    b.Property<int>("Respaw")
                        .HasColumnType("integer");

                    b.Property<int>("StatusVida")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId_Usuario")
                        .HasColumnType("integer");

                    b.Property<int>("Vida")
                        .HasColumnType("integer");

                    b.HasKey("Fk_Usuario", "Fk_Quizz");

                    b.HasIndex("QuizzId_Quiz");

                    b.HasIndex("UsuarioId_Usuario");

                    b.ToTable("Usuario_Quizz");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Alternativa", b =>
                {
                    b.HasOne("EliminIQ_TCC.Models.Pergunta", "Pergunta")
                        .WithMany("Alternativa")
                        .HasForeignKey("Fk_Pergunta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pergunta");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Pergunta", b =>
                {
                    b.HasOne("EliminIQ_TCC.Models.Quizz", "Quizz")
                        .WithMany("Perguntas")
                        .HasForeignKey("Fk_Quiz")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quizz");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Quizz", b =>
                {
                    b.HasOne("EliminIQ_TCC.Models.Dificuldade", "Dificuldade")
                        .WithMany()
                        .HasForeignKey("Fk_Dificuldade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EliminIQ_TCC.Models.Privacidade", "Privacidade")
                        .WithMany()
                        .HasForeignKey("Fk_Privacidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EliminIQ_TCC.Models.TipoQuizz", "TipoQuizz")
                        .WithMany()
                        .HasForeignKey("Fk_Tipo_Quiz")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dificuldade");

                    b.Navigation("Privacidade");

                    b.Navigation("TipoQuizz");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Usuario_Quizz", b =>
                {
                    b.HasOne("EliminIQ_TCC.Models.Quizz", null)
                        .WithMany("Usuario_Quizzes")
                        .HasForeignKey("QuizzId_Quiz");

                    b.HasOne("EliminIQ_TCC.Models.Usuario", null)
                        .WithMany("Usuario_Quizzes")
                        .HasForeignKey("UsuarioId_Usuario");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Pergunta", b =>
                {
                    b.Navigation("Alternativa");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Quizz", b =>
                {
                    b.Navigation("Perguntas");

                    b.Navigation("Usuario_Quizzes");
                });

            modelBuilder.Entity("EliminIQ_TCC.Models.Usuario", b =>
                {
                    b.Navigation("Usuario_Quizzes");
                });
#pragma warning restore 612, 618
        }
    }
}
